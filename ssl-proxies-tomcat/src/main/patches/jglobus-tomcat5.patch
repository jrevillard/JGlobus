diff -ur jglobus-2.0.4.orig/ssl-proxies-tomcat/src/main/java/org/globus/gsi/tomcat/GlobusSSLSocketFactory.java jglobus-2.0.4/ssl-proxies-tomcat/src/main/java/org/globus/gsi/tomcat/GlobusSSLSocketFactory.java
--- jglobus-2.0.4.orig/ssl-proxies-tomcat/src/main/java/org/globus/gsi/tomcat/GlobusSSLSocketFactory.java	2011-07-29 04:41:20.000000000 +0200
+++ jglobus-2.0.4/ssl-proxies-tomcat/src/main/java/org/globus/gsi/tomcat/GlobusSSLSocketFactory.java	2012-09-30 06:47:06.452646206 +0200
@@ -15,7 +15,7 @@
 
 package org.globus.gsi.tomcat;
 
-import org.apache.tomcat.util.net.jsse.JSSESocketFactory;
+import org.apache.tomcat.util.net.jsse.JSSE14SocketFactory;
 import org.globus.gsi.X509ProxyCertPathParameters;
 import org.globus.gsi.jsse.GlobusSSLHelper;
 import org.globus.gsi.provider.GlobusProvider;
@@ -39,50 +39,13 @@
  * @version 1.0
  * @since 1.0
  */
-public class GlobusSSLSocketFactory extends JSSESocketFactory {
+public class GlobusSSLSocketFactory extends JSSE14SocketFactory {
 
     static {
         Security.addProvider(new GlobusProvider());
     }
     
     
-
-    /**
-     * Create a Globus trust manager which supports proxy certificates.  This requires that the CRL store, and
-     * signing policy store be configured.
-     *
-     * @param keystoreType     The type of keystore to create.
-     * @param keystoreProvider The keystore provider to use.
-     * @param algorithm        The keystore algorithm.
-     * @return A set of configured TrustManagers.
-     * @throws Exception If we cannot create the trust managers.
-     */
-    @Override
-    protected TrustManager[] getTrustManagers(String keystoreType, String keystoreProvider, String algorithm)
-            throws Exception {
-        KeyStore trustStore = getTrustStore(keystoreType, keystoreProvider);
-        CertStore crlStore = null;
-        Object crlLocation = attributes.get("crlLocation");
-        if (crlLocation != null) {
-            crlStore = GlobusSSLHelper.findCRLStore((String) attributes.get("crlLocation"));
-        }
-        Object signingPolicyLocation = attributes.get("signingPolicyLocation");
-        ResourceSigningPolicyStore policyStore = null;
-        if (signingPolicyLocation != null) {
-            policyStore = new ResourceSigningPolicyStore(
-                    new ResourceSigningPolicyStoreParameters(attributes.get("signingPolicyLocation").toString()));
-        }
-        Object rejectLimitedProxyEntry = attributes.get("rejectLimitedProxy");
-
-        boolean rejectLimitedProxy = rejectLimitedProxyEntry != null &&
-                Boolean.parseBoolean(attributes.get("rejectLimitedProxy").toString());
-        X509ProxyCertPathParameters parameters = new X509ProxyCertPathParameters(trustStore, crlStore, policyStore,
-                rejectLimitedProxy);
-        TrustManager trustManager = new PKITrustManager(new X509ProxyCertPathValidator(), parameters);
-        return new TrustManager[]{trustManager};
-    }
-
-	
 	@Override
 	protected Object clone() throws CloneNotSupportedException {
 		// TODO Auto-generated method stub
